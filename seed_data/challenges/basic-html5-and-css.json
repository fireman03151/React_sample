{
  "name": "Basic HTML5 and CSS",
  "order" : 0.002,
  "challenges": [
    {
      "_id": "bd7123c8c441eddfaeb5bdef",
      "name": "Waypoint: Say Hello to HTML Elements",
      "difficulty": 0.0085,
      "description": [
        "Welcome to Free Code Camp's first coding challenge! Click on the button below for further instructions.",
        "Awesome. Now you can read the rest of this challenge's instructions.",
        "You can edit <code>code</code> in your <code>text editor</code>, which we've embedded into this web page.",
        "Do you see the code in your text editor that says <code>&#60;h1&#62;Hello&#60;/h1&#62;</code>? That's an HTML <code>element</code>.",
        "Most HTML elements have an <code>opening tag</code> and a <code>closing tag</code>. Opening tags look like this: <code>&#60;h1&#62;</code>. Closing tags look like this: <code>&#60;/h1&#62;</code>. Note that the only difference between opening and closing tags is that closing tags have a slash after their opening angle bracket.",
        "Once you've completed each challenge, and all its tests are passing, the \"Go to my next challenge\" button will become enabled. Click it - or press control and enter at the same time - to advance to the next challenge.",
        "To enable the \"Go to my next challenge\" button on this exercise, change your <code>h1</code> tag's text to say \"Hello World\" instead of \"Hello\"."
      ],
      "tests": [
        "assert.isTrue((/hello(\\s)+world/gi).test($('h1').text()), 'Your h1 element should have the text \"Hello World\"')"
      ],
      "challengeSeed": [
        "<h1>Hello</h1>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf0887a",
      "name": "Waypoint: Headline with the h2 Element",
      "difficulty": 0.010,
      "description": [
        "Add an <code>h2</code> tag that says \"CatPhotoApp\" to create a second HTML <code>element</code> below your \"Hello World\" <code>h1</code> element.",
        "The h2 element you enter will create an h2 element on the website.",
        "This element tells the browser how to render the text that it contains.",
        "<code>h2</code> elements are slightly smaller than <code>h1</code> elements. There are also <code>h3</code>, <code>h4</code>, <code>h5</code> and <code>h6</code> elements."
      ],
      "tests": [
        "assert(($('h2').length > 0), 'Create an <code>h2</code> elements.')",
        "assert.isTrue((/cat(\\s)?photo(\\s)?app/gi).test($('h2').text()), 'Your h2 element should have the text \"CatPhotoApp\"')",
        "assert.isTrue((/hello(\\s)+world/gi).test($('h1').text()), 'Your h1 element should have the text \"Hello World\"')"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08801",
      "name": "Waypoint: Inform with the Paragraph Element",
      "difficulty": 0.011,
      "description": [
        "Create a paragraph element below your h2 element, and give it the text \"Hello Paragraph\". As soon as you create the opening <code>&#60;p&#62;</code> tag, one of our tests will pass (since this is valid HTML). Be sure to close the element by adding a closing <code>&#60;/p&#62;</code> tag.",
        "Paragraph elements are the preferred element for normal-sized paragraph text on websites.",
        "You can create a paragraph element like so: <code>&#60;p&#62;I'm a p tag!&#60;/p&#62;</code>"
      ],
      "tests": [
        "assert(($('p').length > 0), 'Create a paragraph element.')",
        "assert.isTrue((/hello(\\s)+paragraph/gi).test($('p').text()), 'Your paragraph element should have the text \"Hello Paragraph\"')"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "<h2>CatPhotoApp</h2>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aeaf08801",
      "name": "Waypoint: Visually Separate Elements with Line Breaks",
      "difficulty": 0.012,
      "description": [
        "Add a <code>line break</code> between the <code>&#60;h2&#62</code> and <code>&#60;p&#62</code> elements.",
        "You can create a line break element with <code>&#60;br&#47&#62</code>.",
        "Note that <code>&#60;br&#47&#62</code> has no closing tag. It is a <code>self-closing</code> element. See how a forward-slash precedes the closing bracket?",
        "You'll encounter other <code>self-closing</code> element tags soon."
      ],
      "tests": [
        "assert(($('br').length > 0), 'You should have a br element between your h2 and paragraph elements.')"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "<h2>CatPhotoApp</h2>",
        "<p>Hello Paragraph</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08802",
      "name": "Waypoint: Uncomment HTML",
      "difficulty": 0.013,
      "description": [
        "Uncomment the <code>h1</code>, <code>h2</code> and <code>p</code> elements.",
        "Commenting is a way that you can leave comments within your code without affecting the code itself.",
        "Commenting is also a convenient way to make code inactive without having to delete it entirely.",
        "You can start a comment with <code>&#60;!--</code> and end a comment with <code>--&#62;</code>."
      ],
      "tests": [
        "assert(($('h1').length > 0), 'The h1 element should not be commented. It should be visible in the browser.')",
        "assert(($('h2').length > 0), 'The h2 element should not be commented. It should be visible in the browser.')",
        "assert(($('p').length > 0), 'The paragraph element should not be commented. It should be visible in the browser.')"
      ],
      "challengeSeed": [
        "<!--",
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<br/>",
        "",
        "<p>Hello Paragraph</p>",
        "-->"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08804",
      "name": "Waypoint: Comment out HTML",
      "difficulty": 0.014,
      "description": [
        "Comment out the <code>h1</code> element and the <code>p</code> element, but leave the <code>h2</code> element uncommented.",
        "Remember that in order to start a comment, you need to use <code>&#60;!--</code> and to end a comment, you need to use <code>--&#62;</code>.",
        "Here you'll need to end the comment before the h2 element begins."
      ],
      "tests": [
        "assert(($('h1').length == 0), 'The h1 element should be commented. It should not be visible in the browser.')",
        "assert(($('h2').length > 0), 'The h2 element should not commented. It should be visible in the browser.')",
        "assert(($('p').length == 0), 'The paragraph element should be commented. It should not be visible in the browser.')"
      ],
      "challengeSeed": [
        "<!--",
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<br/>",
        "",
        "<p>Hello Paragraph</p>",
        "-->"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08833",
      "name": "Waypoint: Fill in the Blank with Placeholder Text",
      "difficulty": 0.015,
      "description": [
        "Change the text in the <code>p</code> element to use the first few words of <code>Kitty Ipsum</code> text.",
        "Web developers traditionally use <code>Lorem Ipsum</code> as placeholder text. It's called Lorem Ipsum text because those are the first two words of a famous passage by Cicero of Ancient Rome.",
        "Lorem Ipsum text has been used as placeholder text by typesetters since the 16th century, and this tradition continues on the web.",
        "Well, 5 centuries is long enough. Since we're building a CatPhotoApp, let's use something called <a href='http://kittyipsum.com/'>Kitty Ipsum</a>!",
        "Here are the first few words of Kitty Ipsum text, which you can copy and paste into the right position: <code>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</code>"
      ],
      "tests": [
        "assert.isTrue((/Kitty(\\s)+ipsum(\\s)+dolor/gi).test($('p').text()), 'Your paragraph element should contain the first few words of the famous Kitty Ipsum text.')"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<br/>",
        "",
        "<p>Hello Paragraph</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fed1348bd9aedf08833",
      "name": "Waypoint: Delete HTML Elements",
      "difficulty": 0.016,
      "description": [
        "Delete the h1 and br elements so we can simplify our view.",
        "Our phone doesn't have much space, for HTML elements.",
        "Let's remove the unnecessary elements so we can start building our CatPhotoApp."
      ],
      "tests": [
        "assert(($('h1').length == 0), 'Delete the h1 element.')",
        "assert(($('h2').length > 0), 'Leave the h2 element on the page.')",
        "assert(($('br').length == 0), 'Delete the br element.')",
        "assert(($('p').length > 0), 'Leave the paragraph element on the page.')"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<br/>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08803",
      "name": "Waypoint: Change the Color of Text",
      "difficulty": 0.017,
      "description": [
        "Change the <code>h2</code> element's style so that its text color is red.",
        "We can do this by changing the <code>style</code> of the <code>h2</code> element.",
        "The style that is responsible for the color of an element's text is the \"color\" style.",
        "Here's how you would set your <code>h2</code> element's text color to blue: <code>&#60;h2 style=\"color: blue\"&#62;CatPhotoApp&#60;\/h2&#62;</code>"
      ],
      "tests": [
        "assert($('h2').css('color') === 'rgb(255, 0, 0)', 'Your h2 element should be red.')"
      ],
      "challengeSeed": [
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08805",
      "name": "Waypoint: Use CSS Selectors to Style Elements",
      "difficulty": 0.018,
      "description": [
        "Delete your <code>h2</code> element's <code>style</code> tag and write the CSS to make all <code>h2</code> elements blue.",
        "With CSS, there are hundreds of <code>CSS attributes</code> that you can use to change the way an element looks on a web page.",
        "When you entered <code>&#60;h2 style=\"color: red\"&#62;CatPhotoApp&#60;h2&#62;</code>, you were giving that individual h2 element an <code>inline style</code>",
        "That's one way to add style to an element, but a better way is by using <code>Cascading Style Sheets (CSS)</code>.",
        "At the top of your code, create a <code>style tag</code> like this: <code>&#60;style&#62;&#60;/style&#62;</code>",
        "Inside that style element, you can create a <code>css selector</code> for all <code>h2</code> elements. For example, if you wanted all <code>h2</code> elements to be red, your style element would look like this: <code>&#60;style&#62;h2 {color: red;}&#60;/style&#62;</code>",
        "Note that it's important to have <code>opening and closing curly braces</code> (<code>{</code> and <code>}</code>) around each element's style. You also need to make sure your element's style is between the opening and closing style tags. Finally, be sure to add the semicolon to the end of each of your element's styles."
      ],
      "tests": [
        "assert($('h2').css('color') === 'rgb(0, 0, 255)', 'Your h2 element should be blue.')",
        "assert(!$('h2').attr('style'), 'You should remove the style attribute from your h2 element.')"
      ],
      "challengeSeed": [
        "<h2 style='color: red'>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aecf08806",
      "name": "Waypoint: Use a CSS Class to Style an Element",
      "difficulty": 0.019,
      "description": [
        "Create a CSS class called \"red-text\" and apply it to your <code>h2</code> element.",
        "Classes are reusable styles that can be added to HTML elements.",
        "Here's the anatomy of a CSS class:",
        "<img class='img-responsive' alt='a diagram of how style tags are composed, which is also described in detail on the following lines.' src='https://www.evernote.com/l/AHSCzZV0l_dDLrqD8r9JsHaBWfEzdN0OpRwB/image.png'/>",
        "You can see that we've created a CSS class called \"blue-text\" within the <code>&#60;style&#62;</code> tag.",
        "You can apply a class to an HTML element like this: <code>&#60;h2 class=\"blue-text\"&#62;CatPhotoApp&#60;h2&#62;</code>",
        "Note that in your CSS <code>style</code> element, classes should start with a period. In your HTML elements' class declarations, classes shouldn't start with a period.",
        "Instead of creating a new Style tag, try removing the h2 style declaration from the existing style element, and replace it with the class declaration for \".red-text\"."
      ],
      "tests": [
        "assert($('h2').css('color') === 'rgb(255, 0, 0)', 'Your h2 element should be red.')",
        "assert($('h2').hasClass('red-text'), 'You h2 element should have the class \"red-text\".')"
      ],
      "challengeSeed": [
        "<style>",
        "  h2 {",
        "    color: blue;",
        "  }",
        "</style>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aefe08806",
      "name": "Waypoint: Style Multiple Elements with a CSS Class",
      "difficulty": 0.020,
      "description": [
        "Apply the \"red-text\" class to the <code>h2</code> and <code>p</code> elements.",
        "Remember that you can attach classes to HTML elements by using the <code>class=\"class\"</code> within the relevant element's opening tag."
      ],
      "tests": [
        "assert($('h2').css('color') === 'rgb(255, 0, 0)', 'Your h2 element should be red.')",
        "assert($('h2').hasClass('red-text'), 'You h2 element should have the class \"red-text\".')",
        "assert($('p').css('color') === 'rgb(255, 0, 0)', 'Your paragraph element should be red.')",
        "assert($('p').hasClass('red-text'), 'You paragraph element should have the class \"red-text\".')"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08806",
      "name": "Waypoint: Change the Font Size of an Element",
      "difficulty": 0.021,
      "description": [
        "Create a second <code>p</code> element. Then, inside your <code>&#60;style&#62;</code> element, set the font size of all <code>p</code> elements to 16 pixels.",
        "Font size is controlled by the <code>font-size</code> CSS attribute, like this: <code>h1 { font-size: 30px; }</code>.",
        "First, create a second paragraph element with the following Kitty Ipsum text: <code>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</code>",
        "See if you can figure out how to give both of your paragraph elements the font-size of 16 pixels (<code>16px</code>). You can do this inside the same <code>&#60;style&#62;</code> tag that we created for your \"red-text\" class."
      ],
      "tests": [
        "assert($('p').length > 1, 'You need 2 paragraph elements with Kitty Ipsum text.')",
        "assert($('p').css('font-size') === '16px', 'Your paragraph elements should have the font-size of 16px.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aede08807",
      "name": "Waypoint: Set the Font Family of an Element",
      "difficulty": 0.022,
      "description": [
        "Make all paragraph elements use the \"Monospace\" font.",
        "You can set an element's font by using the <code>font-family</code> attribute.",
        "For example, if you wanted to set your h2 element's font to \"San-serif\", you would use the following CSS: <code>h2 { font-family: 'San-serif'; }</code>"
      ],
      "tests": [
        "assert($('p').css('font-family').match(/monospace/i), 'Your paragraph elements should use the font \"Monospace\".')"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08807",
      "name": "Waypoint: Import a Google Font",
      "difficulty": 0.023,
      "description": [
        "Apply the <code>font-family</code> of \"Lobster\" to your <code>h2</code> element.",
        "First, you'll need to make a <code>call</code> to Google to grab the \"Lobster\" font and load it into your HTML.",
        "Copy the following code snippet and paste it into your code editor above your <code>style</code> element:",
        "<code>&#60;link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'&#62;</code>",
        "Now you can set \"Lobster\" as a font-family attribute on your <code>h2</code> element."
      ],
      "tests": [
        "assert($('h2').css('font-family').match(/lobster/i), 'Your h2 element should use the font \"Lobster\".')"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08808",
      "name": "Waypoint: Specify How Fonts Should Degrade",
      "difficulty": 0.024,
      "description": [
        "Make all your <code>h2</code> elements use \"Lobster\" as their font family, but degrade to the \"Monospace\" font when the \"Lobster\" font isn't available.",
        "You can leave \"Lobster\" your <code>h2</code> element's font-family, and have it \"degrade\" to a different font when \"Lobster\" isn't available.",
        "For example, if you wanted an element to use the \"Helvetica\" font, but also degrade to the \"Sans-Serif\" font when \"Helvetica\" wasn't available, you could do use this CSS style: <code>p { font-family: \"Helvetica\", \"Sans-Serif\"; }</code>.",
        "There are several default fonts that are available in all browsers. These include \"Monospace\", \"Serif\" and \"Sans-Serif\". See if you can set your h2 elements to use \"Lobster\" and degrade to \"Monospace\".",
        "Now try commenting out your call to Google Fonts, so that the \"Lobster\" font isn't available. Notice how it degrades to the \"Monospace\" font."
      ],
      "tests": [
        "assert($('h2').css('font-family').match(/lobster/i), 'Your h2 element should use the font \"Lobster\".')",
        "assert($('h2').css('font-family').match(/monospace/i), 'Your h2 element should degrade to the font \"Monospace\" when \"Lobster\" is not available.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08809",
      "name": "Waypoint: Override Styles with Important",
      "difficulty": 0.025,
      "description": [
        "Create a \"blue-text\" class that gives an element the font-color of blue. Also create a \"urgently-red\" class that give an element the font-color of red, but use <code>!important</code> to ensure the element is rendered as being red. Apply both classes to your <code>h2</code> element.",
        "You can add more than one class to an element by seperating the class declarations with a space, like this: <code>&#60;h2 class='green-text giant-text'&#62;This will be giant green text&#60;/h2&#62;</code>.",
        "Sometimes HTML elements will receive conflicting information from CSS classes as to how they should be styled.",
        "If there's a conflict in the CSS, the browser will use whichever style declaration is closest to the bottom of the CSS document (whichever declaration comes last). Note that in-line style declarations are the final authority in how an HTML element will be rendered.",
        "There's one way to ensure that an element is rendered with a certain style, regardless of where that declaration is located. That one way is to use <code>!important</code>.",
        "In case you're curious, this is the priority hierarchy for element styles: !important > inline style > css class selector > css selector. That is, !important trumps all other styles, and inline styles trump style tag declarations.",
        "Here's an example of a CSS style that uses <code>!important</code>: <code>&#60;style&#62; .urgently-blue { color: blue !important; } &#60;/style&#62;</code>.",
        "Now see if you can make sure the h2 element is rendered in the color red without removing the \"blue-text\" class, doing an in-line styling, or changing the sequence of CSS class declarations."
      ],
      "tests": [
        "assert($('h2').hasClass('blue-text'), 'Your h2 element should have the class \"blue-text\".')",
        "assert($('h2').hasClass('urgently-red'), 'Your h2 element should have the class \"urgently-red\".')",
        "assert($('h2').css('color') === 'rgb(255, 0, 0)', 'Your h2 element should be red.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },

    {
      "_id": "bad87fee1348bd9aedf08812",
      "name": "Waypoint: Add Images to your Website",
      "difficulty": 0.026,
      "description": [
        "Use an <code>img</code> element to add the image <code>http://bit.ly/fcc-kittens</code> to your website.",
        "You can add images to your website by using the <code>img</code> element, and point to an specific image's URL using the <code>src</code> attribute.",
        "An example of this would be <code>&#60img src=\"www.your-image-source.com/your-image.jpg\"/&#62</code>. Note that in most cases, <code>img</code> elements are self-closing.",
        "Try it with this image: <code>http://bit.ly/fcc-kittens</code>."
      ],
      "tests": [
        "assert($('img').length > 0, 'Your webpage should have an image element.')",
        "assert(!!$('img').filter(function(index) { return /kittens/gi.test($('img').attr('src')); }).length > 0, 'Your image should have have a <code>src</code> attribute that points to the kitten image.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9acdf08812",
      "name": "Waypoint: Size your Images",
      "difficulty": 0.027,
      "description": [
        "Create a class called <code>smaller-image</code> and use it to resize the image so that it's only 100 pixels wide.",
        "CSS has an attribute called <code>width</code> that controls an element's width. Just like with fonts, we'll use pixels(px) to specify the images width.",
        "For example, if we wanted to create a CSS class called \"larger-image\" that gave HTML elements a width of 500 pixels, we'd use: <code>&#60;style&#62; .larger-image { width: 500px; } &#60;/style&#62;</code>."
      ],
      "tests": [
        "assert($('img').hasClass('smaller-image'), 'Your <code>img</code> element should have the class \"smaller-image\".')",
        "assert($('img').width() === 100, 'Your image should be 100 pixels wide.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<img src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9bedf08813",
      "name": "Waypoint: Add Borders Around your Elements",
      "difficulty": 0.028,
      "description": [
        "Create a class called \"thick-green-border\" that puts a 10-pixel-wide green border around an HTML element, and apply it to your cat photo.",
        "CSS borders have attributes like style, color and width.",
        "For example, if we wanted to create a red, 5 pixel border around an HTML element, we could use this class: <code>&#60;style&#62; .thin-red-border { border-color: red; border-width: 5px; border-style: solid; } &#60;/style&#62;</code>."
      ],
      "tests": [
        "assert($('img').hasClass('smaller-image'), 'Your <code>img</code> element should have the class \"smaller-image\".')",
        "assert($('img').hasClass('thick-green-border'), 'Your image element should have the class \"thick-green-border\".')",
        "assert(parseInt($('img').css('border-left-width')) > 8, 'Your image should have a border with a width of 10 pixels.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<img class='smaller-image' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08814",
      "name": "Waypoint: Add Rounded Corners with a Border Radius",
      "difficulty": 0.029,
      "description": [
        "Give your cat photo a border radius of 10 pixels.",
        "Your cat photo currently has sharp corners. We can round out those corners with a CSS attribute called <code>border-radius</code>.",
        "You can specify a <code>border-radius</code> with pixels. This will affect how rounded the corners are. Add this attribute to your <code>thick-green-border</code> class and set it to 10 pixels."
      ],
      "tests": [
        "assert($('img').hasClass('thick-green-border'), 'Your image element should have the class \"thick-green-border\".')",
        "assert(parseInt($('img').css('border-top-left-radius')) > 8, 'Your image should have a border radius of 10 pixels')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08815",
      "name": "Waypoint: Make Circular Images with a Border Radius",
      "difficulty": 0.030,
      "description": [
        "Give your cat photo a <code>border-radius</code> of 50%.",
        "In addition to pixels, you can also specify a <code>border-radius</code> using a percentage."
      ],
      "tests": [
        "assert(parseInt($('img').css('border-top-left-radius')) > 48, 'Your image should have a border radius of 50 percent, making it perfectly circular.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 10px;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08816",
      "name": "Waypoint: Link to External Pages with Anchor Elements",
      "difficulty": 0.031,
      "description": [
        "Create an <code>anchor</code> element that links to http://catphotoapp.com and has \"cat photos\" as its anchor text (link text).",
        "Here's a diagram of an <code>anchor tag</code>. In this case, it's used in the middle of a paragraph element, which means your link will appear in the middle of your sentence.",
        "<img class='img-responsive' alt='a diagram of how anchor tags are composed with the same text as on the following line' src='https://www.evernote.com/l/AHSaNaepx_lG9LhhPkVYmagcedpmAeITDsQB/image.png'/>",
        "Here's an example: <code>&#60;p&#62;Here's a &#60;a href='http://freecodecamp.com'&#62; link to Free Code Camp&#60;/a&#62; for you to follow.&#60;/p&#62;</code>"
      ],
      "tests": [
        "assert((/cat photos/gi).test($('a').text()), 'Your <code>anchor</code> element should have the anchor text of \"See my cat photos\"')",
        "assert($('a').filter(function(index) { return /com/gi.test($('a').attr('href')); }).length > 0, 'You need an <code>anchor</code> element that links to <code>http&#58;//catphotoapp.com<code>.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aede08817",
      "name": "Waypoint: Wrap an Anchor Element within a Paragraph",
      "difficulty": 0.032,
      "description": [
        "Now wrap your anchor element within a <code>paragraph</code> element so that the surrounding paragraph says \"click here for cat photos\", but where only \"cat photos\" is a link - the rest is plain text.",
        "Again, here's a diagram of an <code>anchor tag</code> for your reference:",
        "<img class='img-responsive' alt='a diagram of how anchor tags are composed with the same text as on the following line' src='https://www.evernote.com/l/AHSaNaepx_lG9LhhPkVYmagcedpmAeITDsQB/image.png'/>",
        "Here's an example: <code>&#60;p&#62;Here's a &#60;a href='http://freecodecamp.com'&#62; link to Free Code Camp&#60;/a&#62; for you to follow.&#60;/p&#62;</code>"
      ],
      "tests": [
        "assert((/photo/gi).test($('a').text()), 'You need an <code>anchor</code> element that links to \"catphotoapp.com\".')",
        "assert($('a').filter(function(index) { return /photo/gi.test($('a')[index]); }).length === 1, 'Your <code>anchor</code> element should have the anchor text of \"See my cat photos\"')",
        "assert($('a').parent().is('p'), 'Your anchor element should be wrapped within a paragraph element.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<a href='http://www.catphotoapp.com'>cat photos</a>",
        "",
        "<img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },

    {
      "_id": "bad87fee1348bd9aedf08817",
      "name": "Waypoint: Make Dead Links using the Hash Symbol",
      "difficulty": 0.033,
      "description": [
        "Use the hash symbol(#) to turn your <code>anchor</code> element's link into a dead link.",
        "Sometimes you want to add <code>anchor</code> elements to your website before you know where they will link.",
        "This is also handy when you're changing the behavior of a link using <code>jQuery</code>, which we'll learn about later.",
        "Replace your <code>anchor</code> element's <code>href</code> attribute with a hash symbol to turn it into a dead link."
      ],
      "tests": [
        "assert($('a').attr('href') === '#', 'Your <code>anchor</code> element should be a dead link with a <code>href</code> attribute set to \"#\".')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='http://www.catphotoapp.com'>cat photos</a>.</p>",
        "",
        "<img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08820",
      "name": "Waypoint: Turn an Image into a Link",
      "difficulty": 0.034,
      "description": [
        "Wrap your <code>img</code> element inside an anchor element with a dead link.",
        "You can make elements into links by wrapping them in an <code>anchor tag</code>.",
        "Wrap your image in an <code>anchor tag</code>. Here's an example: <code>&#60;a href='#'&#62;&#60;img src='http://bit.ly/fcc-kittens2'&#62;&#60;/a&#62;</code>",
        "Remember to use the hash symbol as your <code>anchor tag</code>'s <code>href</code> property in order to turn it into a dead link.",
        "Once you've done this, hover over your image with your cursor. Your cursor's normal pointer should become the link clicking pointer. The photo is now a link."
      ],
      "tests": [
        "assert($('a').filter(function(index) { return /#/gi.test($('a')[index]); }).length > 1, 'Wrap your image element inside an anchor element that has its <code>href</code> attribute set to \"#\".')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08818",
      "name": "Waypoint: Add Alt Text to an Image for Accessibility",
      "difficulty": 0.035,
      "description": [
        "Add the <code>alt text</code> \"A cute orange cat lying on its back\" to our cat photo",
        "<code>alt text</code> is what browsers will display if they fail to load the image. <code>alt text</code> is also important for blind or visually impaired users to understand what an image portrays. Search engines also look at <code>alt text</code>.",
        "In short, every image should have <code>alt text</code>!",
        "<code>Alt text</code> is a useful way to tell people (and web crawlers like Google) what is pictured in a photo. It's extremely important for helping blind or visually impaired people understand the content of your website.",
        "You can add alt text right in the img element like this: <code>&#60img src=\"www.your-image-source.com/your-image.jpg\" alt=\"your alt text\"/&#62</code>."
      ],
      "tests": [
        "assert($('img').filter(function(){ return /cat/gi.test(this.alt) }).length > 0, 'Your image element should have an <code>alt</code> attribute set to \"A cute orange cat lying on its back\".')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedf08827",
      "name": "Waypoint: Create a Bulleted Unordered List",
      "difficulty" : 0.036,
      "description": [
        "Replace the paragraph elements with an unordered list of three things that cats love.",
        "HTML has a special element for creating unordered lists, or bullet point-style lists.",
        "Unordered lists start with a <code>&#60;ul&#62;</code> element. Then they contain some number of <code>&#60;li&#62;</code> elements.",
        "For example: <code>&#60;ul&#62;&#60;li&#62;milk&#60;/li&#62;&#60;li&#62;cheese&#60;/li&#62;&#60;ul&#62;</code> would create a bulleted list of \"milk\" and \"cheese\"."
      ],
      "tests": [
        "assert($('ul').length > 0, 'Create a <code>ul</code> element.')",
        "assert($('li').length > 2, 'Add three <code>li</code> elements to your <code>ul</code> element.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p class='red-text'>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class='red-text'>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedf08828",
      "name": "Waypoint: Create an Ordered List",
      "difficulty" : 0.037,
      "description": [
        "Create an <code>ordered list</code> of the the top 3 things cats hate the most.",
        "HTML has a special element for creating ordered lists, or numbered-style lists.",
        "Ordered lists start with a <code>&#60;ol&#62;</code> element. Then they contain some number of <code>&#60;li&#62;</code> elements.",
        "For example: <code>&#60;ol&#62;&#60;li&#62;hydrogen&#60;/li&#62;&#60;li&#62;helium&#60;/li&#62;&#60;ol&#62;</code> would create a numbered list of \"hydrogen\" and \"helium\"."
      ],
      "tests": [
        "assert($('ul').length > 0, 'You should have an <code>ul</code> element on your webpage.')",
        "assert($('ol').length > 0, 'You should have an <code>ol</code> element on your webpage.')",
        "assert($('li').length > 5, 'You should have three <code>li</code> elements on within your <code>ul</code> element.')",
        "assert($('li').length > 5, 'You should have three <code>li</code> elements on within your <code>ol</code> element.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedf08829",
      "name": "Waypoint: Create a Text Field",
      "difficulty" : 0.038,
      "description": [
        "Now we'll create a web form. Create a text field under your lists.",
        "Text inputs are a convenient way to get input from your user.",
        "You can create one like this: <code>&#60;input type='text'&#62;</code>"
      ],
      "tests": [
        "assert($('input').length > 0, 'Your app should have an text field input element.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedf08830",
      "name": "Waypoint: Add Placeholder Text to a Text Field",
      "difficulty" : 0.039,
      "description": [
        "Add the placeholder text \"type a cat photo URL here\" to your text field.",
        "Placeholder text will appear in your text field before your user has inputed anything.",
        "For example: <code>&#60;input type='text' placeholder='this is placeholder text'&#62;</code>"
      ],
      "tests": [
        "assert($('[placeholder]').length > 0, 'Your text field should have a placeholder attribute.')",
        "assert(/url/gi.test($('input').attr('placeholder')), 'Your placeholder field should have the value of \"cat photo URL\".')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<input type='text'>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aede08830",
      "name": "Waypoint: Create a Form Element",
      "difficulty" : 0.040,
      "description": [
        "Wrap your text field in a <code>&#60;form&#62;</code> element. Add the <code>action=\"/submit-cat-photo\"</code> attribute to this form element.",
        "You can build web forms that actually submit data to a server using nothing more than pure HTML. You can do this by specifying an action on your <code>form</code> element.",
        "For example: <code>&#60;form action=\"/url-where-you-want-to-submit-form-data\"&#62;&#60;/form&#62;</code>"
      ],
      "tests": [
        "assert($('form').length > 0, 'Wrap your text input element within a <code>form</code> element.')",
        "assert($('form').attr('action'), 'Your <code>form</code> element should have an <code>action</code> attribute.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<input type='text' placeholder='cat photo URL'>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedd08830",
      "name": "Waypoint: Add a Submit Button to a Form",
      "difficulty" : 0.041,
      "description": [
        "Add a submit button to your form field.",
        "Let's add a submit button to your form. Clicking this button will send the date from your form to the URL you specified with your form's <code>action</code> attribute.",
        "Here's an example submit button: <code>&#60;button type='submit'&#62;this button submits the form&#60;/button&#62;<code>"
      ],
      "tests": [
        "assert($('button').length > 0, 'Your form should have a button inside it.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <input type='text' placeholder='cat photo URL'>",
        "</form>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedc08830",
      "name": "Waypoint: Use HTML5 to Require a Field",
      "difficulty" : 0.042,
      "description": [
        "Make it required for your user to input text into your form before being able to submit it.",
        "You can require your user to complete specific form fields before they will be able to submit your form.",
        "For example, if you wanted to make a text input field required, you can just add the word \"required\" within your <code>input</code> element use: <code>&#60;input type='text' required&#62;</code>"
      ],
      "tests": [
        "assert($('input').prop('required'), 'Your text field have the property of being required.')",
        "assert($('[placeholder]').length > 0, 'Your text field should have the placeholder text of \"cat photo URL\".')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <input type='text'>",
        "  <button type='submit'>Submit</button>",
        "</form>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedf08834",
      "name": "Waypoint: Create a Set of Radio Buttons",
      "difficulty" : 0.043,
      "description": [
        "Add to your form a pair of <code>radio buttons</code> that are wrapped in <code>label</code> elements and share a <code>name</code> attribute, with the options of \"indoor\" and \"outdoor\".",
        "You can use <code>radio buttons</code> for questions where you want the user to only give you one answer.",
        "Radio buttons are a type of <code>input</code>.",
        "Radio buttons should be wrapped within <code>label</code> elements.",
        "All related radio buttons should have the same <code>name</code> attribute.",
        "Here's an example of a radio button: <code>&#60;label&#62;&#60;input type='radio' name='indoor-outdoor'&#62; Indoor&#60;/label&#62;</code>"
      ],
      "tests": [
        "assert($('input[type=\"radio\"]').length > 1, 'Your webpage should have two radio button elements.')",
        "assert($('input[type=\"radio\"]:nth-child(1)').attr('name') === 'indoor-outdoor', 'Give your radio buttons the <code>name</code> attribute of \"indoor-outdoor\".')",
        "assert($('label').length > 1, 'Each of your two radio button elements should be wrapped in a label element.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <input type='text' placeholder='cat photo URL' required>",
        "  <button type='submit'>Submit</button>",
        "</form>"
      ],
      "challengeType": 0
    },

    {
      "_id" : "bad87fee1348bd9aedf08835",
      "name": "Waypoint: Create a Set of Checkboxes",
      "difficulty" : 0.044,
      "description": [
        "Add to your form a set of three <code>checkbox</code> elements that are wrapped in <code>label</code> elements and share the same <code>name</code> attribute.",
        "Forms commonly use <code>checkbox</code> elements for questions that may have more than one answer.",
        "For example: <code>&#60;label&#62;&#60;input type='checkbox' name='personality'&#62; Loving&#60;/label&#62;</code>"
      ],
      "tests": [
        "assert($('input[type=\"checkbox\"]').length > 2, 'Your webpage should have three checkbox elements.')",
        "assert($('label').length > 4, 'Each of your three checkbox elements should be wrapped in a label element.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type='radio' name='indoor-outdoor'> Indoor</label>",
        "  <label><input type='radio' name='indoor-outdoor'> Outdoor</label>",
        "  <input type='text' placeholder='cat photo URL' required>",
        "  <button type='submit'>Submit</button>",
        "</form>"
      ],
      "challengeType" : 0
    },

    {
      "_id" : "bad87fee1348bd9aede08835",
      "name": "Waypoint: Clean up your form using Linebreaks",
      "difficulty" : 0.045,
      "description": [
        "Clean up your form by adding linebreaks between form elements.",
        "Remember that you can create a linebreak element by using the code: <code>&#60;br&#62;</code>"
      ],
      "tests": [
        "assert($('br').length > 1, 'Add at least 2 line breaks to visually separate your form elements.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type='radio' name='indoor-outdoor'> Indoor</label>",
        "  <label><input type='radio' name='indoor-outdoor'> Outdoor</label>",
        "  <label><input type='checkbox' name='personality'> Loving</label>",
        "  <label><input type='checkbox' name='personality'> Lazy</label>",
        "  <label><input type='checkbox' name='personality'> Crazy</label>",
        "  <input type='text' placeholder='cat photo URL' required>",
        "  <button type='submit'>Submit</button>",
        "</form>"
      ],
      "challengeType" : 0
    },

    {
      "_id" : "bad87fee1348bd9aedd08835",
      "name": "Waypoint: Check Radio Buttons and Checkboxes by Default",
      "difficulty" : 0.046,
      "description": [
        "Set the first of your radio buttons and the first of your checkboxes to both be checked by default.",
        "You set a checkbox or radio button to be checked by default using the <code>checked</code> attribute.",
        "To do this, just add the word \"checked\" to the inside of an input element. For example, <code>&#60;input type='radio' name='test-name' checked&#62;</code>."
      ],
      "tests": [
        "assert($('input[type=\"radio\"').prop('checked'), 'Your first radio button on your form should be checked by default.')",
        "assert($('input[type=\"checkbox\"').prop('checked'), 'Your first checkbox on your form should be checked by default.')"
      ],
      "challengeSeed": [
        "<link href='http://fonts.googleapis.com/css?family=Lobster' rel='stylesheet' type='text/css'>",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class='red-text'>CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href='#'>cat photos</a>.</p>",
        "",
        "<a href='#'><img class='smaller-image thick-green-border' src='https://bit.ly/fcc-kittens'/></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type='radio' name='indoor-outdoor'> Indoor</label>",
        "  <label><input type='radio' name='indoor-outdoor'> Outdoor</label>",
        "  <br>",
        "  <label><input type='checkbox' name='personality'> Loving</label>",
        "  <label><input type='checkbox' name='personality'> Lazy</label>",
        "  <label><input type='checkbox' name='personality'> Crazy</label>",
        "  <br>",
        "  <input type='text' placeholder='cat photo URL' required>",
        "  <button type='submit'>Submit</button>",
        "</form>"
      ],
      "challengeType" : 0
    },
    {
      "_id": "bad88fee1348bd9aedf08825",
      "name": "Waypoint: Adjusting the Padding of an Element",
      "difficulty": 0.064,
      "description": [
        "These next few Waypoints will give you a brief tour of three important aspects of the space surrounding HTML elements: <code>padding</code>, <code>margin</code>, and <code>border</code>. Change the <code>padding</code> of your green box to match that of your red box.",
        "An element's <code>padding</code> controls the amount of space between the element and its <code>border</code>.",
        "Here, we can see that the green box and the red box are nested within the yellow box. Note that the red box has more <code>padding</code> than the green box.",
        "When you increase the green box's <code>padding</code>, it will increase the distance between the text \"padding\" and the border around it."
      ],
      "tests": [
        "assert($('.green-box').css('padding-top') === '20px', 'Your <code>green-box</code> class should give elements 20px of padding.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding:10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    padding: 20px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "    padding: 10px;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08822",
      "name": "Waypoint: Adjust the Margin of an Element",
      "difficulty": 0.065,
      "description": [
        "Change the <code>margin</code> of the green box to match that of the red box.",
        "An element's <code>margin</code> controls the amount of space between an element's <code>border</code> and surrounding elements.",
        "Here, we can see that the green box and the red box and the green box are nested within the yellow box. Note that the red box has more <code>margin</code> than the green box, making it appear smaller.",
        "When you increase the green box's <code>margin</code>, it will increase the distance between its border and surrounding elements."
      ],
      "tests": [
        "assert($('.green-box').css('margin-top') === '20px', 'Your <code>green-box</code> class should give elements 20px of margin.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding:10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    padding: 20px;",
        "    margin: 20px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "    padding: 20px;",
        "    margin: 10px;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08823",
      "name": "Waypoint: Add a Negative Margin to an Element",
      "difficulty": 0.066,
      "description": [
        "Change the <code>margin</code> of the green box to a negative value, so it fills the entire horizontal width of the yellow box around it.",
        "An element's <code>margin</code> controls the amount of space between an element's <code>border</code> and surrounding elements.",
        "If you set an element's margin to a negative value, the element will grow larger.",
        "Try to set the margin to a negative value like the one for the red box."
      ],
      "tests": [
        "assert($('.green-box').css('margin-top') === '-15px', 'Your <code>green-box</code> class should give elements -15px of margin.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding:10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    padding: 20px;",
        "    margin: -15px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "    padding: 20px;",
        "    margin: 20px;",
        "  }",
        "</style>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08824",
      "name": "Waypoint: Add Different Padding to Each Side of an Element",
      "difficulty": 0.067,
      "description": [
        "Give the green box a padding of 40 pixels on its top and left side, but only 20 pixels on its bottom and right side.",
        "Sometimes you will want to customize an element so that it has different padding on each of its sides.",
        "CSS allows you to control the padding of an element on all four sides with <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, and <code>padding-left</code> attributes."
      ],
      "tests": [
        "assert($('.green-box').css('padding-left') === '40px', 'Your <code>green-box</code> class should give the left of elements 40px of padding.')",
        "assert($('.green-box').css('padding-bottom') === '20px', 'Your <code>green-box</code> class should give the bottom of elements 20px of padding.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding:10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    padding-top: 40px;",
        "    padding-right: 20px;",
        "    padding-bottom: 20px;",
        "    padding-left: 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1248bd9aedf08824",
      "name": "Waypoint: Add Different a Margin to Each Side of an Element",
      "difficulty": 0.068,
      "description": [
        "Give the green box a margin of 40 pixels on its top and left side, but only 20 pixels on its bottom and right side.",
        "Sometimes you will want to customize an element so that it has a different margin on each of its sides.",
        "CSS allows you to control the margin of an element on all four sides with <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> attributes."
      ],
      "tests": [
        "assert($('.green-box').css('margin-left') === '40px', 'Your <code>green-box</code> class should give the left of elements 40px of margin.')",
        "assert($('.green-box').css('margin-bottom') === '20px', 'Your <code>green-box</code> class should give the bottom of elements 20px of margin.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding:10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    margin-top: 40px;",
        "    margin-right: 20px;",
        "    margin-bottom: 20px;",
        "    margin-left: 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08826",
      "name": "Waypoint: Use Clockwise Notation to Specify the Padding of an Element",
      "difficulty": 0.069,
      "description": [
        "Use <code>Clockwise Notation</code> to give an element padding of 40 pixels on its top and left side, but only 20 pixels on its bottom and right side.",
        "Instead of specifying an element's <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, and <code>padding-left</code> attributes, you can specify them all in one line, like this: <code>padding: 10px 20px 10px 20px;</code>.",
        "These four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific padding instructions.",
        "You can also use this notation for margins!"
      ],
      "tests": [
        "assert($('.green-box').css('padding-left') === '40px', 'Your <code>green-box</code> class should give the left of elements 40px of padding.')",
        "assert($('.green-box').css('padding-bottom') === '20px', 'Your <code>green-box</code> class should give the bottom of elements 20px of padding.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 20px 40px 20px 40px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    padding: 20px 40px 20px 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    },
    {
      "_id": "bad87fee1348bd9aedf08726",
      "name": "Waypoint: Use Clockwise Notation to Specify the Margin of an Element",
      "difficulty": 0.070,
      "description": [
        "Let's try this again, but with <code>margin</code> this time. Use <code>Clockwise Notation</code> to give an element a margin of 40 pixels on its top and left side, but only 20 pixels on its bottom and right side.",
        "Instead of specifying an element's <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> attributes, you can specify them all in one line, like this: <code>margin: 10px 20px 10px 20px;</code>.",
        "These four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific padding instructions.",
        "You can also use this notation for margins!"
      ],
      "tests": [
        "assert($('.green-box').css('margin-left') === '40px', 'Your <code>green-box</code> class should give the left of elements 40px of margin.')",
        "assert($('.green-box').css('margin-bottom') === '20px', 'Your <code>green-box</code> class should give the bottom of elements 20px of margin.')"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 20px 40px 20px 40px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color:red;",
        "    margin: 20px 40px 20px 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "challengeType": 0
    }
  ]
}
